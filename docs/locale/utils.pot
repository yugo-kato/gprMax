# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015-2025, The University of Edinburgh, United Kingdom. Authors: Craig Warren and Antonis Giannopoulos
# This file is distributed under the same license as the gprMax package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: gprMax 3.1.7\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2025-03-18 22:01+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../source/utils.rst:5
msgid "File utilities"
msgstr ""

#: ../source/utils.rst:7
msgid "This section provides information on how to use the other Python modules in the ``tools`` package to help manage gprMax files."
msgstr ""

#: ../source/utils.rst:10
msgid "inputfile_old2new.py"
msgstr ""

#: ../source/utils.rst:12
msgid "This modules assists with the process of migrating input files from the syntax of the old (pre v.3) version of gprMax to the new syntax. It will produce a new input file with the old syntax (attempted to be!) translated to the new syntax. Usage (from the top-level gprMax directory) is:"
msgstr ""

#: ../source/utils.rst:18
msgid "where ``inputfile`` is the name of input file including the path."
msgstr ""

#: ../source/utils.rst:22
msgid "outputfiles_merge.py"
msgstr ""

#: ../source/utils.rst:24
msgid "gprMax produces a separate output file for each trace (A-scan) in a B-scan. This module combines the separate output files into a single file, and can remove the separate output files afterwards. Usage (from the top-level gprMax directory) is:"
msgstr ""

#: ../source/utils.rst:30
#: ../source/utils.rst:45
msgid "where:"
msgstr ""

#: ../source/utils.rst:32
msgid "``basefilename`` is the base name file of the output file series, e.g. for ``myoutput1.out``, ``myoutput2.out`` the base file name would be ``myoutput``"
msgstr ""

#: ../source/utils.rst:33
msgid "``remove-files`` is an optional argument (flag) that when given will remove the separate output files after the merge."
msgstr ""

#: ../source/utils.rst:37
msgid "convert_png2h5.py"
msgstr ""

#: ../source/utils.rst:39
msgid "This module enables a Portable Network Graphics (PNG) image file to be converted into a HDF5 file that can then be used to import geometry into gprMax (see the ``#geometry_objects_read`` command for information on how to use the HDF5 file with a materials file to import the geometry). The resulting geometry will be 2D but maybe extended in the z-(invariate) direction if a 3D model was desired. Usage (from the top-level gprMax directory) is:"
msgstr ""

#: ../source/utils.rst:47
msgid "``imagefile`` is the name of the PNG image file including the path"
msgstr ""

#: ../source/utils.rst:48
msgid "``dxdydz`` is the spatial discretisation to be used in the model"
msgstr ""

#: ../source/utils.rst:50
msgid "There is an optional command line argument:"
msgstr ""

#: ../source/utils.rst:52
msgid "``-zcells`` is the number of cells to extend the geometry in the z-(invariate) direction of the model"
msgstr ""

#: ../source/utils.rst:54
msgid "For example create a HDF5 geometry objects file from the PNG image ``my_layers.png`` with a spatial discretisation of :math:`\\Delta x = \\Delta y = \\Delta z = 0.002` metres, and extending 150 cells in the z-(invariate) direction of the model:"
msgstr ""

#: ../source/utils.rst:60
msgid "The module will display the PNG image and allow the user to select colours that will be used to define discrete materials in the model. When the user has finished selecting colours the window should be closed, whereupon the HDF5 file will be written."
msgstr ""
